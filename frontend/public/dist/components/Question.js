define(['exports'],function(exports){'use strict';Object.defineProperty(exports,'__esModule',{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var Question=exports.Question=function(_React$Component){_inherits(Question,_React$Component);function Question(props){_classCallCheck(this,Question);var _this=_possibleConstructorReturn(this,(Question.__proto__||Object.getPrototypeOf(Question)).call(this,props));_this.state={value:''};if(typeof props.id=='undefined'||!props.id){console.log('Statement doesn\'t have privided identifier.')}_this.id=props.id;_this.handleChange=_this.handleChange.bind(_this);return _this}_createClass(Question,[{key:'handleChange',value:function handleChange(event){this.setState({value:event.target.value})}}]);return Question}(React.Component)});